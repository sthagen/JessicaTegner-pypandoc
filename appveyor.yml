environment:
  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
  # /E:ON and /V:ON options are not enabled in the batch script intepreter
  # See: http://stackoverflow.com/a/13751649/163740
  CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
  TWINE_PASSWORD:
    secure: XofI4w4Vdjc9gc4j0gAa6keiUlj5Y7mLlg7Jd9fOyXlVyTxfMq+iFyIRsQAkYF3HK7TOsAOhuH8LVbIweGb7WsUA+n6HygDGyMABFN+ZB7vmS04FuzWc9KB+tnwBPFnkEZU+abrfSgyqu0Tdx5tAAH17BUTflR0im0LCvH42AaH7GJinxkrma7iL+F50NS+bwXsBUvSow34wdUJ0O0ARHKKyiQnRIrN7TBVK7G/hhMTWPQ12SSOq87uxGXVlhvKXL+Y3A0PTFmyaFawJ7FmvyA==
  TWINE_USERNAME: __token__

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.9"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python310-x64"
      PYTHON_VERSION: "3.10.1"
      PYTHON_ARCH: "64"


install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # stolen from https://github.com/doxygen/doxygen/blob/master/appveyor.yml
  - appveyor-retry appveyor DownloadFile  https://miktex.org/download/win/miktexsetup-x64.zip
  - 7z e miktexsetup-x64.zip
  - appveyor-retry miktexsetup_standalone.exe --local-package-repository=C:\miktex-repository --package-set=essential download
  - miktexsetup_standalone.exe --local-package-repository=C:\miktex-repository --package-set=essential --shared install
  - refreshenv
  # autoinstall latex packages (0=no, 1=autoinstall, 2=ask)
  # this adds this to the registry!
  - initexmf --admin --set-config-value "[MPM]AutoInstall=1"

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --disable-pip-version-check --user --upgrade pip"
  - "python -m pip install twine wheel"
  - "python -m pip install poetry"
  - "poetry install"

build_script:
  - "poetry run python --version"
  - "poetry run python setup.py download_pandoc"
  - "poetry run pypandoc\\files\\pandoc --version"

test_script:
  # Run the project tests
  - "poetry run python --version"
  - "poetry run python tests.py"

after_test:
  # If tests are successful, create binary packages for the project.
  - "python --version"
  - "python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

on_success:
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
        # we produce version independent packages, so once per "big" version is enough
        if ($env:PYTHON_VERSION -eq "3.7.x" -or $env:PYTHON_VERSION -eq "2.7.x") {
          twine upload --verbose dist/*.whl
        }
      }
